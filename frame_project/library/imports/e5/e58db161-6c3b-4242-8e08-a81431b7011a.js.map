{"version":3,"sources":["assets\\homePage\\script\\common\\ScreenShot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAY;IAApD;QAAA,qEA+DC;QA5DG,YAAM,GAAc,IAAI,CAAC;QAElB,cAAQ,GAAY,IAAI,CAAC;QACzB,mBAAa,GAAiB,IAAI,CAAC;;IAyD9C,CAAC;IAvDU,yBAAI,GAAX;QAAA,iBAeC;QAdG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,aAAa,EAAE,CAAC;YACrC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAA,wBAAwB;YAClH,KAAI,CAAC,MAAM,CAAC,aAAa,GAAG,OAAO,CAAC;YACpC,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,YAAY,CAAC;gBACd,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,OAAO,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACnE,IAAI,aAAa,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;gBACvC,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvE,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC5B,OAAO,CAAC,aAAa,CAAC,CAAC;YAC3B,CAAC,EAAE,CAAC,CAAC,CAAA;QACT,CAAC,CAAC,CAAA;IACN,CAAC;IAED,+BAAU,GAAV,UAAW,IAAI,EAAE,KAAK,EAAE,MAAM;QAC1B,wBAAwB;QACxB,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC;QACzB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;YACnC,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;YAC7B,IAAI,OAAO,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;YAC9B,uBAAuB;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAE/B,QAAQ;gBACR,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACZ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAA;oBACpE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE;wBACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;qBACzB;iBACJ;gBAED,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC1C;SACJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,0BAAK,GAAZ;QAAA,iBAYC;QAXG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,aAAa,EAAE,CAAC;YAErC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;YAC1F,KAAI,CAAC,MAAM,CAAC,aAAa,GAAG,OAAO,CAAC;YACpC,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,YAAY,CAAC;gBACd,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC5B,OAAO,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,EAAE,CAAC,CAAC,CAAA;QACT,CAAC,CAAC,CAAA;IACN,CAAC;IA3DD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8CACK;IAHR,UAAU;QAD9B,OAAO;OACa,UAAU,CA+D9B;IAAD,iBAAC;CA/DD,AA+DC,CA/DuC,EAAE,CAAC,SAAS,GA+DnD;kBA/DoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ScreenShot extends cc.Component {\r\n\r\n    @property(cc.Camera)\r\n    camera: cc.Camera = null;\r\n\r\n    public shotNode: cc.Node = null;\r\n    public shotTexture2D: cc.Texture2D = null;\r\n\r\n    public shot() {\r\n        return new Promise((resolve, reject) => {\r\n            let texture = new cc.RenderTexture();\r\n            texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc[\"gfx\"].RB_FMT_D24S8);//RB_FMT_D24S8 RB_FMT_S8\r\n            this.camera.targetTexture = texture;\r\n            this.camera.enabled = true;\r\n            this.scheduleOnce(() => {\r\n                let data = texture.readPixels();\r\n                let picData = this.filpYImage(data, texture.width, texture.height);\r\n                let shotTexture2D = new cc.Texture2D();\r\n                shotTexture2D.initWithData(picData, 32, texture.width, texture.height);\r\n                this.camera.enabled = false;\r\n                resolve(shotTexture2D);\r\n            }, 0)\r\n        })\r\n    }\r\n\r\n    filpYImage(data, width, height) {\r\n        // create the data array\r\n        let picData = new Uint8Array(width * height * 4);\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let start = srow * width * 4;\r\n            let reStart = row * width * 4;\r\n            // save the piexls data\r\n            for (let i = 0; i < rowBytes; i++) {\r\n\r\n                // 透明度修正\r\n                if (i % 4 == 3) {\r\n                    data[start + i] = Math.round(Math.sqrt(data[start + i] / 255) * 255)\r\n                    if (data[start + i] > 220) {\r\n                        data[start + i] = 255;\r\n                    }\r\n                }\r\n\r\n                picData[reStart + i] = data[start + i];\r\n            }\r\n        }\r\n        return picData;\r\n    }\r\n\r\n    public shot2() {\r\n        return new Promise((resolve, reject) => {\r\n            let texture = new cc.RenderTexture();\r\n\r\n            texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc[\"gfx\"].RB_FMT_D24S8);\r\n            this.camera.targetTexture = texture;\r\n            this.camera.enabled = true;\r\n            this.scheduleOnce(() => {\r\n                this.camera.enabled = false;\r\n                resolve(texture);\r\n            }, 0)\r\n        })\r\n    }\r\n}\r\n"]}