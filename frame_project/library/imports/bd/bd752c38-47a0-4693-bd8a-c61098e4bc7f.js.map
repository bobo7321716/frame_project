{"version":3,"sources":["assets\\homePage\\script\\manager\\TimeManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { PlayerData } from \"../common/PlayerData\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TimeManager extends cc.Component {\r\n\r\n    public static ins: TimeManager = null;\r\n\r\n    /**游戏运行的时长 */\r\n    private _curTime: number = 0;\r\n    public get curTime(): number {\r\n        return this._curTime;\r\n    }\r\n\r\n    private interval: number = 1;\r\n    private timer: number = 0;\r\n    private timeCalls: { callFunc: ((time: number) => void), targetTime: number, caller: any, isTriggerOnce: boolean }[] = [];\r\n    public getHeartbeatInterval: number = 1;\r\n\r\n    protected onLoad(): void {\r\n        TimeManager.ins = this;\r\n        this.timer = 0;\r\n        this._curTime = 0;\r\n        this.timeCalls = [];\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        this.timer += dt;\r\n        if (this.timer >= this.interval) {\r\n            this.timer = 0;\r\n            this.checkTimeCall();\r\n        }\r\n        this._curTime += dt * 1000;\r\n        PlayerData.ins.todayOnlineDuration += dt * 1000;\r\n        PlayerData.ins.lastOnLineDur += dt * 1000;\r\n    }\r\n\r\n    public checkTimeCall() {\r\n        this.timeCalls.forEach((call) => {\r\n            if (call && call.callFunc) {\r\n                if (this.curTime >= call.targetTime) {\r\n                    this.offCdCall(call);\r\n                    if (call.isTriggerOnce) {\r\n                        call.callFunc(0);\r\n                    }\r\n                }\r\n                !call.isTriggerOnce && call.callFunc((call.targetTime - this.curTime) / 1000);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加一个倒计时回调，每秒触发,返回剩余时间\r\n     * @param call 回调\r\n     * @param targetTime 回调移除时间,毫秒\r\n     * @param caller \r\n     * @param isTriggerOnce 是否只触发一次\r\n     * @returns \r\n     */\r\n    public onCdCall(call: (time: number) => void, targetTime: number, caller: any, isCheckSame: boolean = true, isTriggerOnce: boolean = false) {\r\n        if (isCheckSame && this.timeCalls.find(data => data.caller == caller) != undefined) {\r\n            console.warn(\"TimeManager 重复注册\");\r\n            return;\r\n        }\r\n        this.timeCalls.push({ callFunc: call, targetTime: targetTime, caller: caller, isTriggerOnce: isTriggerOnce });\r\n    }\r\n\r\n    /**移除倒计时回调 */\r\n    public offCdCall(call: { callFunc: ((time: number) => void), targetTime: number, caller: any }) {\r\n        let index = this.timeCalls.findIndex(v => v.callFunc.name == call.callFunc.name && v.targetTime == call.targetTime && v.caller == call.caller);\r\n        if (index >= 0) {\r\n            this.timeCalls.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public offAll(caller: any) {\r\n        this.timeCalls = this.timeCalls.filter(v => v.caller != caller);\r\n    }\r\n}\r\n"]}