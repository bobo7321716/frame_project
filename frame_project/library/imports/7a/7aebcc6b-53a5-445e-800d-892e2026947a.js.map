{"version":3,"sources":["assets\\homePage\\script\\common\\Util.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nexport class Util {\r\n\r\n    /**\r\n * 将字符串转换为一维数组\r\n * @param str 目标字符串\r\n * @param sep 分隔符 默认为\",\"\r\n */\r\n    static convertStrToArr<T = any>(str: string, sep = \",\") {\r\n        if (!str) return [];\r\n        let arr = [];\r\n        let subStrArr = str.split(sep);\r\n        subStrArr.forEach(subStr => {\r\n            if (Number(subStr) !== undefined) {\r\n                arr.push(subStr);\r\n            } else {\r\n                arr.push(subStr);\r\n            }\r\n        })\r\n        return arr as T[];\r\n    }\r\n\r\n    public static getWorldPosition(node: cc.Node): cc.Vec2 {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        let parent = node.getParent();\r\n        if (!parent) {\r\n            return node.getPosition();\r\n        }\r\n\r\n        return parent.convertToWorldSpaceAR(node.getPosition());\r\n    }\r\n\r\n    public static getWorldSize(node: cc.Node): cc.Size {\r\n        let size = node.getContentSize();\r\n        size.height *= node.scale;\r\n        size.width *= node.scale;\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            size.height *= parent.scale;\r\n            size.width *= parent.scale;\r\n            parent = parent.getParent();\r\n        }\r\n        return size;\r\n    }\r\n\r\n    public static setWorldSize(node: cc.Node, size: cc.Size): void {\r\n        node.setContentSize(size);\r\n        size.height /= node.scale;\r\n        size.width /= node.scale;\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            node.width /= parent.scale;\r\n            node.height /= parent.scale;\r\n            parent = parent.getParent();\r\n        }\r\n    }\r\n\r\n    public static getWorldScale(node: cc.Node): number {\r\n        let scale = node.scale;\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            scale *= parent.scale;\r\n            parent = parent.getParent();\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    public static setWorldPosition(node: cc.Node, worldPos: cc.Vec2): void {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        if (!worldPos) {\r\n            return;\r\n        }\r\n\r\n        let parent = node.getParent()\r\n        if (!parent) {\r\n            node.setPosition(worldPos)\r\n            return;\r\n        }\r\n\r\n        let localPos = parent.convertToNodeSpaceAR(worldPos);\r\n        node.setPosition(localPos);\r\n    }\r\n\r\n    public static getWorldRotation(node: cc.Node): number {\r\n        let rot = node.rotation;\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            rot += parent.rotation;\r\n            parent = parent.getParent();\r\n        }\r\n        return rot;\r\n    }\r\n\r\n    public static getWorldRotationWithRot(parent: cc.Node, localRot: number): number {\r\n        let rot = localRot;\r\n        while (parent) {\r\n            rot += parent.rotation;\r\n            parent = parent.getParent();\r\n        }\r\n        return rot;\r\n    }\r\n\r\n    public static getLocalRotation(targetNode: cc.Node, worldRot: number): number {\r\n        let rot = worldRot;\r\n        let parent = targetNode.getParent();\r\n        while (parent) {\r\n            rot -= parent.rotation;\r\n            parent = parent.getParent();\r\n        }\r\n        return rot;\r\n    }\r\n\r\n    public static setWorldRotation(node: cc.Node, worldRot: number): void {\r\n        node.rotation = worldRot;\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            node.rotation -= parent.rotation;\r\n            parent = parent.getParent();\r\n        }\r\n    }\r\n\r\n    public static distance(a: cc.Vec2, b: cc.Vec2): number {\r\n        if (!a || !b) {\r\n            return;\r\n        }\r\n        let vec = new cc.Vec2(a.x - b.x, a.y - b.y);\r\n        return vec.mag();\r\n    }\r\n\r\n    public static vec(start: cc.Node, end: cc.Node): cc.Vec2 {\r\n        if (!start || !end) {\r\n            return;\r\n        }\r\n        let a = this.getWorldPosition(start);\r\n        let b = this.getWorldPosition(end);\r\n        return new cc.Vec2(b.x - a.x, b.y - a.y);\r\n    }\r\n\r\n    //角度转向量\r\n    public static degreesToVectors(degree) {\r\n        let radian = cc.misc.degreesToRadians(degree);\r\n        let comVec = cc.v2(0, 1);\r\n        let dirVec = comVec.rotate(-radian);\r\n        return dirVec;\r\n    }\r\n\r\n    //向量转角度\r\n    public static vectorsToDegress(dirVec: cc.Vec2) {\r\n        let comVec = cc.v2(0, 1);\r\n        let radian = dirVec.normalize().signAngle(comVec);\r\n        let degree = cc.misc.radiansToDegrees(radian);\r\n        return degree;\r\n    }\r\n\r\n    /**向量转弧度 */\r\n    public static vectorToRadian(dirVec: cc.Vec2) {\r\n        return dirVec.normalize().signAngle(cc.v2(0, 1));\r\n    }\r\n\r\n    //求两向量夹角\r\n    public static getDegreeByVec(vec1: cc.Vec2, vec2: cc.Vec2): number {\r\n        let radian = vec1.normalize().signAngle(vec2.normalize());\r\n        let degree = cc.misc.radiansToDegrees(radian);\r\n        if (degree < -90) {\r\n            degree = -90 - (90 + degree);\r\n        }\r\n        if (degree > 90) {\r\n            degree = 180 - degree;\r\n        }\r\n        return degree;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param a 起点\r\n     * @param b 终点\r\n     */\r\n    public static vector(a: cc.Vec2, b: cc.Vec2): cc.Vec2 {\r\n        if (!a || !b) {\r\n            return cc.Vec2.UP;\r\n        }\r\n        let vector = new cc.Vec2();\r\n        vector.x = b.x - a.x;\r\n        vector.y = b.y - a.y;\r\n\r\n        return vector;\r\n    }\r\n\r\n    public static readonly xMin = 0;\r\n    public static readonly yMin = 0;\r\n    public static readonly xMax = 3120;\r\n    public static readonly yMax = 3120;\r\n\r\n    // public static clampPosition(position: cc.Vec2, radius: number): cc.Vec2 {\r\n    //     let x = cc.misc.clampf(position.x, this.xMin + radius, this.xMax - radius);\r\n    //     let y = cc.misc.clampf(position.y, this.yMin + radius, this.yMax - radius);\r\n    //     return cc.v2(x, y);\r\n    // }\r\n\r\n    public static caculateRadius(c: number, minRadius: number, maxRadius: number): number {\r\n        let r = c / (2 * Math.PI);\r\n        return cc.misc.clampf(r, minRadius, maxRadius);\r\n    }\r\n\r\n    /**\r\n     * 取得开始值和结束值之间的插值\r\n     * @param num 0-1 表示从开始值到结束值之间的比例\r\n     * @param startValue 开始值\r\n     * @param endValue 结束值\r\n     */\r\n    public static lerp(num: number, startValue: number | cc.Vec2 | cc.Color, endValue: number | cc.Vec2 | cc.Color): number | cc.Vec2 | cc.Color {\r\n        num = cc.misc.clampf(num, 0, 1);\r\n        if (typeof startValue == \"number\" && typeof endValue == \"number\") {\r\n            let result = startValue + (endValue - startValue) * num;\r\n            return result;\r\n        }\r\n        else if ((startValue instanceof cc.Vec2 || startValue instanceof cc.Vec3) && (endValue instanceof cc.Vec2 || endValue instanceof cc.Vec3)) {\r\n            let start = startValue as cc.Vec2;\r\n            let end = endValue as cc.Vec2;\r\n            let x = this.lerp(num, start.x, end.x) as number;\r\n            let y = this.lerp(num, start.y, end.y) as number;\r\n            let result = cc.v2(x, y);\r\n            return result;\r\n        }\r\n        else if (startValue instanceof cc.Color && endValue instanceof cc.Color) {\r\n            let start = startValue as cc.Color;\r\n            let end = endValue as cc.Color;\r\n            let r = this.lerp(num, start.getR(), end.getR()) as number;\r\n            let g = this.lerp(num, start.getG(), end.getG()) as number;\r\n            let b = this.lerp(num, start.getB(), end.getB()) as number;\r\n            let a = this.lerp(num, start.getA(), end.getA()) as number;\r\n            let result = cc.color(r, g, b, a);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public static getRandomInt(min: number, max: number): number {\r\n        if (min > max) {\r\n            let temp = min;\r\n            min = max;\r\n            max = temp;\r\n        }\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    public static getRandomFloat(min: number, max: number): number {\r\n        if (min > max) {\r\n            let temp = min;\r\n            min = max;\r\n            max = temp;\r\n        }\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * 超长字符用’...‘替代\r\n     * @param str \r\n     * @param maxLen \r\n     */\r\n    static subString(str: string, maxLen: number = 10, suffix = '...') {\r\n        let len = this.getLength(str);\r\n\r\n        let l = 0, i = 0;\r\n        let a = str.split(\"\");\r\n        for (i = 0; i < a.length; i++) {\r\n            if (a[i].charCodeAt(0) < 299) {\r\n                l++;\r\n                if (l > maxLen) {\r\n                    l = l - 1;\r\n                    break;\r\n                }\r\n            } else {\r\n                l += 2;\r\n                if (l > maxLen) {\r\n                    l = l - 2;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return str.substr(0, i) + (len > maxLen ? suffix : '');\r\n    }\r\n\r\n    static getLength(str: string) {\r\n        let n_str = new String(str);\r\n        let bytesCount = 0;\r\n        for (let i = 0, n = n_str.length; i < n; i++) {\r\n            let c = n_str.charCodeAt(i);\r\n            if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {\r\n                bytesCount += 1;\r\n            } else {\r\n                bytesCount += 2;\r\n            }\r\n        }\r\n        return bytesCount;\r\n    }\r\n\r\n    /**\r\n     * 分隔符分割字符串\r\n     * @param str \r\n     * @param sep \r\n     * @param len \r\n     */\r\n    static formatString(str: string | number, sep: string = ',', len: number = 3) {\r\n        str = str.toString();\r\n        let strLen = str.length;\r\n        let newStr = str;\r\n        for (let i = strLen - len; i > 0; i -= len) {\r\n            let left = str.substring(0, i);\r\n            let right = str.substring(i);\r\n            newStr = left + sep + right;\r\n            strLen = str.length;\r\n            str = newStr;\r\n        }\r\n        return newStr\r\n    }\r\n\r\n    /**字符串分割为数组 */\r\n    static stringToArray(str, sep = ';'): Array<any> {\r\n        if (!str) return [];\r\n        let new_list = [];\r\n        let list = str.replace(' ', '').split(sep);\r\n        list.forEach(key => {\r\n            if (key != null && key !== undefined && key != '') {\r\n                if (!isNaN(Number(key))) {\r\n                    key = Number(key);\r\n                }\r\n                new_list.push(key);\r\n            }\r\n        });\r\n        return new_list;\r\n    }\r\n\r\n    /**删除字符串左右空格 */\r\n    static trim(str: string) {\r\n        if (typeof str !== 'string') return str;\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n\r\n    /**\r\n     * 转换秒数时间为标准样式\r\n     */\r\n    public static convertTimeToStandStyle(second: number): string {\r\n        let sec = second % 60;\r\n        second -= sec;\r\n        let min = second / 60;\r\n        let minN = min % 60;\r\n        min -= minN;\r\n        let hour = min / 60;\r\n\r\n        return (hour > 0 ? (hour + \":\") : \"\") +\r\n            (minN > 0 ? (minN >= 10 ? minN : \"0\" + minN) : \"00\") + \":\" +\r\n            (sec > 0 ? (sec >= 10 ? sec : \"0\" + sec) : \"00\");\r\n    }\r\n\r\n    /**将秒转为 [时，分,秒] */\r\n    public static convertTimeToStandStyle2(second: number): number[] {\r\n        let hour = second >= 3600 ? Math.floor(second / 3600) : 0;\r\n        second -= hour * 3600;\r\n        let min = second >= 60 ? Math.floor(second / 60) : 0;\r\n        second -= min * 60;\r\n        let sec = second;\r\n        return [hour, min, sec];\r\n    }\r\n\r\n\r\n    public static formatData(time: string | number = null) {\r\n        if (!time) time = Date.now();\r\n        const date = new Date(time)\r\n        const y = date.getFullYear()\r\n        let m: string | number = date.getMonth() + 1\r\n        m = m < 10 ? `0${String(m)}` : m\r\n        let d: string | number = date.getDate()\r\n        d = d < 10 ? `0${String(d)}` : d\r\n        let h: string | number = date.getHours()\r\n        h = h < 10 ? `0${String(h)}` : h\r\n        let minute: string | number = date.getMinutes()\r\n        minute = minute < 10 ? `0${String(minute)}` : minute\r\n        let second: string | number = date.getSeconds()\r\n        second = second < 10 ? `0${String(second)}` : second\r\n        // return `${String(y)}-${String(m)}-${String(d)}   ${String(h)}:${String(\r\n        //     minute\r\n        // )}:${String(second)}`\r\n        return `${String(y)}/${String(m)}/${String(d)} ${String(h)}:${String(\r\n            minute\r\n        )}`\r\n    }\r\n\r\n\r\n    /**检查数组中是否有相同vec */\r\n    public static checkSameVec(vecArr: cc.Vec2[], vec: cc.Vec2) {\r\n        if (vecArr.length <= 0) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < vecArr.length; i++) {\r\n            if (vecArr[i].x == vec.x && vecArr[i].y == vec.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**从数组中随机取值 */\r\n    public static getRandomValue<T>(arr: T[]) {\r\n        let index = Math.floor(Math.random() * arr.length);\r\n        return { value: arr[index], key: index };\r\n    }\r\n\r\n    /**copy数组 */\r\n    public static copyArr<T>(arr: T[]): T[] {\r\n        if (arr.length <= 0) {\r\n            return [];\r\n        }\r\n        let newArr = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            newArr.push(arr[i]);\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**随机打乱数组顺序 */\r\n    public static randomArrOrder(arr) {\r\n        let i = arr.length;\r\n        while (i) {\r\n            let j = Math.floor(Math.random() * i--);\r\n            [arr[j], arr[i]] = [arr[i], arr[j]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**获取两数组的不同值 */\r\n    public static getArrDifference(arr1, arr2): any[] {\r\n        return arr1.concat(arr2).filter(function (v, i, arr) {\r\n            return arr.indexOf(v) === arr.lastIndexOf(v);\r\n        });\r\n    }\r\n\r\n    /**获取两数组相同值 */\r\n    public static getArrSame(arr1, arr2) {\r\n        return arr1.filter(item => {\r\n            let idList = arr2.map(val => val.name)\r\n            return idList.indexOf(item.name) != -1\r\n        })\r\n    }\r\n\r\n    /**获取两数组相同值 */\r\n    static getCommonElements<T>(arr1: T[], arr2: T[]): T[] {\r\n        return arr1.filter(item => arr2.includes(item));\r\n    }\r\n\r\n    /**限制取值范围 */\r\n    public static clampValue(val: number, min: number, max: number) {\r\n        if (min == max) {\r\n            return min;\r\n        }\r\n        if (min > max) {\r\n            let temp = min;\r\n            min = max;\r\n            max = temp;\r\n        }\r\n        return val < min ? min : val > max ? max : val;\r\n    }\r\n\r\n    /**检查vec数组中是否有值与vec相等 不考虑顺序 */\r\n    public static checkSameVecNoOrder(vecArr: cc.Vec2[], vec: cc.Vec2) {\r\n        if (vecArr.length <= 0) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < vecArr.length; i++) {\r\n            if ((vecArr[i].x == vec.x && vecArr[i].y == vec.y) || (vecArr[i].x == vec.y && vecArr[i].y == vec.x)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**检查两个向量是否相等 */\r\n    public static checkVecIsSame(vec1: cc.Vec2, vec2: cc.Vec2) {\r\n        return vec1.x == vec2.x && vec1.y == vec2.y;\r\n    }\r\n\r\n    /**\r\n     * !#en Test line and line\r\n     * !#zh 测试线段与线段是否相交\r\n     * @method lineLine\r\n     * @param {Vec2} a1 - The start point of the first line\r\n     * @param {Vec2} a2 - The end point of the first line\r\n     * @param {Vec2} b1 - The start point of the second line\r\n     * @param {Vec2} b2 - The end point of the second line\r\n     * @return {boolean}\r\n     */\r\n    public static checkLineIntersect(a1: cc.Vec2, a2: cc.Vec2, b1: cc.Vec2, b2: cc.Vec2) {\r\n\r\n        var ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\r\n        var ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x);\r\n        var u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n\r\n        if (u_b !== 0) {\r\n            var ua = ua_t / u_b;\r\n            var ub = ub_t / u_b;\r\n\r\n            if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**将字符串数组转为number数组 */\r\n    public static changeStrArrToNumArr(strArr: string[]): number[] {\r\n        let numArr = [];\r\n        for (let i = 0; i < strArr.length; i++) {\r\n            numArr.push(Number(strArr[i]));\r\n        }\r\n        return numArr;\r\n    }\r\n\r\n    /**获取一个num数组中的最大值 */\r\n    public static getMaxNumInNumArr(arr: number[]): number {\r\n        return arr.sort().reverse()[0];\r\n    }\r\n\r\n    /**克隆一个字符串 */\r\n    public static copyStr(str: string): string {\r\n        let newStr = \"\";\r\n        for (let i = 0; i < str.length; i++) {\r\n            newStr += str[i];\r\n        }\r\n        return newStr;\r\n    }\r\n\r\n    /**\r\n * 遍历执行//遍历某个节点的所有子节点包括自己，并可执行设置的操作\r\n * @param tarNode 遍历的根结点\r\n * @param execute 每个节点执行的操作\r\n */\r\n    public static TraversalExecute(tarNode: cc.Node, execute: (selfNode: cc.Node) => void): void {\r\n        execute(tarNode);\r\n        tarNode.children.forEach((value) => {\r\n            this.TraversalExecute(value, execute);\r\n        });\r\n    }\r\n\r\n    /**检查当前值是否在目标值允许误差范围内 */\r\n    public static checkValueRandom(value: number, tarVal: number, error: number) {\r\n        return value >= tarVal - error && value <= tarVal + error;\r\n    }\r\n\r\n    /**判断两个多边形碰撞器是否相交 */\r\n    public static polygonPolygonTest(polygon1: cc.PolygonCollider, polygon2: cc.PolygonCollider) {\r\n        if (!polygon1 || !polygon2) {\r\n            return false;\r\n        }\r\n        if (!polygon1.node.active || !polygon2.node.active) {\r\n            return false;\r\n        }\r\n        let points1: cc.Vec2[] = [];\r\n        for (let i = 0; i < polygon1.points.length; i++) {\r\n            let pos = polygon1.node.convertToWorldSpaceAR(polygon1.points[i]);\r\n            points1.push(pos);\r\n        }\r\n        let points2: cc.Vec2[] = [];\r\n        for (let i = 0; i < polygon2.points.length; i++) {\r\n            let pos = polygon2.node.convertToWorldSpaceAR(polygon2.points[i]);\r\n            points2.push(pos);\r\n        }\r\n        return cc.Intersection.polygonPolygon(points1, points2);\r\n    }\r\n\r\n    /**判断两个多边形碰撞器是否有接触 部分相交返回true，完全包含，完全无接触返回false\r\n     */\r\n    public static linePolygonTest(polygon1: cc.PolygonCollider, polygon2: cc.PolygonCollider) {\r\n        if (!polygon1 || !polygon2) {\r\n            return false;\r\n        }\r\n        if (!polygon1.node.active || !polygon2.node.active) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < polygon2.points.length; i++) {\r\n            let vec = polygon2.points[i];\r\n            let a1 = polygon2.node.convertToWorldSpaceAR(vec);\r\n            a1 = polygon1.node.convertToNodeSpaceAR(a1);\r\n            let a2 = null;\r\n            if (i < polygon2.points.length - 1) {\r\n                a2 = polygon2.node.convertToWorldSpaceAR(polygon2.points[i + 1]);\r\n            } else {\r\n                a2 = polygon2.node.convertToWorldSpaceAR(polygon2.points[0]);\r\n            }\r\n            a2 = polygon1.node.convertToNodeSpaceAR(a2);\r\n            let isCollider = cc.Intersection.linePolygon(a1, a2, polygon1.points);\r\n            if (isCollider) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**测试一个世界坐标系的点是否在多边形碰撞器内 */\r\n    static polygonHitTest(polyCol: cc.PolygonCollider, touchPos: cc.Vec2) {\r\n        touchPos = polyCol.node.convertToNodeSpaceAR(touchPos);\r\n        return cc.Intersection.pointInPolygon(touchPos, polyCol.points);\r\n    }\r\n\r\n    /**判断两个线段是否相交，如果相交 返回两个线段的交点\r\n     * @param {Vec2} a - The start point of the first line\r\n     * @param {Vec2} b - The end point of the first line\r\n     * @param {Vec2} c - The start point of the second line\r\n     * @param {Vec2} d - The end point of the second line\r\n     * @return {boolean}\r\n     */\r\n    static segmentsIntr(a: cc.Vec2, b: cc.Vec2, c: cc.Vec2, d: cc.Vec2) {\r\n\r\n        /** 1 解线性方程组, 求线段交点. **/\r\n        // 如果分母为0 则平行或共线, 不相交  \r\n        var denominator = (b.y - a.y) * (d.x - c.x) - (a.x - b.x) * (c.y - d.y);\r\n        if (denominator == 0) {\r\n            return false;\r\n        }\r\n\r\n        // 线段所在直线的交点坐标 (x , y)      \r\n        var x = ((b.x - a.x) * (d.x - c.x) * (c.y - a.y)\r\n            + (b.y - a.y) * (d.x - c.x) * a.x\r\n            - (d.y - c.y) * (b.x - a.x) * c.x) / denominator;\r\n        var y = -((b.y - a.y) * (d.y - c.y) * (c.x - a.x)\r\n            + (b.x - a.x) * (d.y - c.y) * a.y\r\n            - (d.x - c.x) * (b.y - a.y) * c.y) / denominator;\r\n\r\n        /** 2 判断交点是否在两条线段上 **/\r\n        if (\r\n            // 交点在线段1上  \r\n            (x - a.x) * (x - b.x) <= 0 && (y - a.y) * (y - b.y) <= 0\r\n            // 且交点也在线段2上  \r\n            && (x - c.x) * (x - d.x) <= 0 && (y - c.y) * (y - d.y) <= 0\r\n        ) {\r\n            // 返回交点p  \r\n            return cc.v2(x, y);\r\n        }\r\n        //否则不相交  \r\n        return false;\r\n    }\r\n\r\n    /**屏幕适配，返回界面缩放比例 */\r\n    public static sceneAdaptation() {\r\n        let frameSize = cc.view.getVisibleSize();\r\n        let canvasSize = cc.view.getDesignResolutionSize();\r\n        console.log(\"frameSize = \", frameSize);\r\n        console.log(\"canvasSize = \", canvasSize);\r\n        console.log(cc.view.getCanvasSize())\r\n        let aspectRatio = frameSize.width / frameSize.height;\r\n        console.log(\"aspectRatio = \", aspectRatio)\r\n        let adapScale = 1;\r\n        let canvasAr = canvasSize.width / canvasSize.height;\r\n        if (canvasAr < 1) {\r\n            let scale = canvasSize.height / frameSize.height;\r\n            adapScale = canvasSize.width / (frameSize.width * scale);\r\n            adapScale = adapScale > 1 ? 1 : adapScale;\r\n            // if (aspectRatio > 0.5625) {\r\n            //     adapScale *= (aspectRatio / 0.5625);\r\n            // }\r\n            console.log(\"竖屏 \", adapScale);\r\n        } else {\r\n            canvasAr = canvasSize.height / canvasSize.width;\r\n            let scale = canvasSize.width / frameSize.width;\r\n            adapScale = canvasSize.height / (frameSize.height * scale);\r\n            console.log(\"横屏 \", adapScale);\r\n        }\r\n        return adapScale;\r\n    }\r\n\r\n    /**\r\n* 从数组中删除一个元素\r\n* @param array 数组\r\n* @param element 需要删除的元素\r\n*/\r\n    public static deleteElement<T>(array: T[], element: T): T[] {\r\n        let index = array.indexOf(element);\r\n        if (index >= 0) {\r\n            array.splice(index, 1);\r\n            // console.log(\"移除TimeManager 监听成功 \", element)\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n* 从数组中删除一组元素\r\n* @param array 数组\r\n* @param element 需要删除的元素组\r\n*/\r\n    public static deleteElements<T>(array: T[], deleteArray: T[]): T[] {\r\n        if (array == null || deleteArray == null) {\r\n            return;\r\n        }\r\n        deleteArray.forEach((value) => {\r\n            this.deleteElement(array, value);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    public static deleteElementByRule<T>(array: T[], targetOrder: (a: T) => boolean): T[] {\r\n        return Util.deleteElement<T>(array, Util.find<T>(array, targetOrder));\r\n    }\r\n\r\n    public static deleteElementsByRule<T>(array: T[], targetOrder: (a: T) => boolean): T[] {\r\n        return Util.deleteElements<T>(array, array.filter(a => targetOrder(a)));\r\n    }\r\n\r\n    /**\r\n    * 寻找数组中的第一个符合条件的元素\r\n    * @param array \r\n    * @param preciate \r\n    */\r\n    public static find<T>(array: T[], preciate: (a: T) => boolean): T {\r\n        if (array == null || array.length == 0) {\r\n            return null;\r\n        }\r\n        if (preciate == null) {\r\n            return array[0];\r\n        }\r\n        let result = null;\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (preciate(array[i])) {\r\n                result = array[i];\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**获取一组随机数 */\r\n    public static getRandomNum(numLength: number): number {\r\n        let num = \"\";\r\n        for (let i = 0; i < numLength; i++) {\r\n            num += this.getRandomInt(0, 9);\r\n        }\r\n        return Number(num);\r\n    }\r\n\r\n    /**\r\n     * 是否是以后的天数\r\n     * @param lastTime 上次时间\r\n     * @param curTime 当前时间\r\n     */\r\n    public static isNextDay(lastTime: number, curTime: number): boolean {\r\n        if (lastTime > curTime) {\r\n            return false\r\n        }\r\n        else if (curTime - lastTime >= 24 * 60 * 60 * 1000) {\r\n            return true;\r\n        } else {\r\n            let lastDate = new Date(lastTime);\r\n            let curDate = new Date(curTime);\r\n            return lastDate.getDay() != curDate.getDay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否是以后的周\r\n     * @param lastTime 上次时间\r\n     * @param curTime 当前时间\r\n     */\r\n    public static isNextWeek(lastTime: number, curTime: number): boolean {\r\n        if (lastTime > curTime) {\r\n            return false\r\n        }\r\n        else if (curTime - lastTime >= 24 * 60 * 60 * 1000 * 7) {\r\n            return true;\r\n        } else {\r\n            let lastDate = new Date(lastTime);\r\n            let curDate = new Date(curTime);\r\n            return curDate.getDay() < lastDate.getDay() || (curDate.getDay() == lastDate.getDay() && curTime - lastTime > 24 * 60 * 60 * 1000);\r\n        }\r\n    }\r\n\r\n    public static getAllEnumNums(enumType: any): number[] {\r\n        let objs: number[] = [];\r\n        for (let de in enumType) {\r\n            if (!isNaN(parseInt(de))) {\r\n                objs.push(parseInt(de));\r\n            }\r\n        }\r\n        return objs;\r\n    }\r\n\r\n    /**获取枚举的value数组 */\r\n    public static getAllEnumValues(enumType: any): any[] {\r\n        let objs: any[] = [];\r\n        for (const key in enumType) {\r\n            objs.push(enumType[key]);\r\n        }\r\n        return objs;\r\n    }\r\n\r\n    public static getAllEnumKeys(enumType: any): any[] {\r\n        let objs: any[] = [];\r\n        for (const key in enumType) {\r\n            if (isNaN(Number(key))) {\r\n                objs.push(key);\r\n            }\r\n        }\r\n        return objs;\r\n    }\r\n\r\n    /**获取一个随机枚举 */\r\n    public static getRandomEnum<T>(enumType: T) {\r\n        let strs: string[] = [];\r\n        for (const key in enumType) {\r\n            strs.push(key);\r\n        }\r\n        this.randomArrOrder(strs);\r\n        return enumType[strs[0]];\r\n    }\r\n\r\n    /**根据权重随机取值 */\r\n    public static getRandomEleInWeight<T>(objs: [T, number][]): T {\r\n        if (objs == null || objs.length == 0) {\r\n            return null;\r\n        }\r\n        let allWeight = 0;\r\n        let curWeight = 0;\r\n        let objsProb: [T, number, number][] = [];\r\n        objs.forEach((value) => {\r\n            allWeight += value[1];\r\n            objsProb.push([value[0], curWeight, curWeight + value[1]]);\r\n            curWeight += value[1];\r\n        });\r\n        let rand = Math.random() * allWeight;\r\n        for (let i = 0; i < objsProb.length; i++) {\r\n            if (rand > objsProb[i][1] && rand <= objsProb[i][2]) {\r\n                return objsProb[i][0];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**获取矩形范围内随机一点 */\r\n    static getRandomPosInRect(rect: cc.Rect) {\r\n        return cc.v2(rect.x + Math.random() * rect.width, rect.y + Math.random() * rect.height);\r\n    }\r\n\r\n    /**添加一个子节点并添加脚本 */\r\n    public static addComponentNode(paNode: cc.Node, className: string) {\r\n        let node = new cc.Node(className);\r\n        node.parent = paNode;\r\n        let classSrc = node.addComponent(className);\r\n        return classSrc;\r\n    }\r\n\r\n    /**根据对象的value获取key */\r\n    public static getObjKeyByValue<T, U extends T[keyof T]>(\r\n        record: T,\r\n        value: U\r\n    ): keyof T | undefined {\r\n        return (Object.keys(record) as Array<keyof T>).find(k => {\r\n            return record[k] === value\r\n        }\r\n        );\r\n    }\r\n\r\n    /**屏幕震动效果 */\r\n    public static shakeAnim(node: cc.Node, loopTimes: number = 1): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            node.stopAllActions();\r\n            cc.tween(node)\r\n                .to(0.02, { position: cc.v3(5, 7) })\r\n                .to(0.02, { position: cc.v3(-6, 7) })\r\n                .to(0.02, { position: cc.v3(-13, 3) })\r\n                .to(0.02, { position: cc.v3(3, -6) })\r\n                .to(0.02, { position: cc.v3(-5, 5) })\r\n                .to(0.02, { position: cc.v3(2, -8) })\r\n                .to(0.02, { position: cc.v3(-8, 10) })\r\n                .to(0.02, { position: cc.v3(3, 10) })\r\n                .to(0.02, { position: cc.v3(0, 0) })\r\n                .union()\r\n                .repeat(loopTimes)\r\n                .call(() => {\r\n                    resolve(null);\r\n                })\r\n                .start()\r\n        })\r\n    }\r\n\r\n    /**将富文本替换成可使用打字机效果显示的文本数组2 */\r\n    public static richTextTypewrite(str: string) {\r\n        let charArr = str.replace(/<.+?\\/?>/g, '').split('');\r\n        let tempStrArr = [str];\r\n\r\n        for (let i = charArr.length; i > 1; i--) {\r\n            let curStr = tempStrArr[charArr.length - i];\r\n            let lastIdx = curStr.lastIndexOf(charArr[i - 1]);\r\n            let prevStr = curStr.slice(0, lastIdx);\r\n            let nextStr = curStr.slice(lastIdx + 1, curStr.length);\r\n            tempStrArr.push(prevStr + nextStr);\r\n        }\r\n        tempStrArr = tempStrArr.reverse();\r\n        // console.log(tempStrArr)\r\n        return tempStrArr;\r\n    }\r\n\r\n\r\n    /**将富文本替换成可使用打字机效果显示的文本数组 性能较差*/\r\n    public static replaceRichText(str: string) {\r\n        const regex = /<.+?\\/?>/g; // 匹配尖括号标签\r\n        const matchArr = str.match(regex);\r\n        const specialChar = \"│\";\r\n        const replaceStr = str.replace(regex, specialChar); // 标签数组\r\n        const textArr: string[] = replaceStr.split(specialChar); // 文字数组\r\n        const strArr: string[] = []; // 存放处理过的文字数组\r\n        let paraNum = 0; // 待替换参数个数\r\n        for (let text of textArr) {\r\n            // 非空字符替换成类似 $[0-n] 参数\r\n            if (text !== \"\") {\r\n                text = `$[${paraNum}]`;\r\n                paraNum += 1;\r\n            }\r\n            strArr.push(text);\r\n        }\r\n        let templetStr: string = strArr.join(specialChar); // 数组转成待替换字符串\r\n        for (let index = 0; index < textArr.length; index++) {\r\n            // 转换代替换字符串之后, 删除文字数组多余空字符\r\n            if (textArr[index] === \"\") {\r\n                textArr.splice(index, 1);\r\n                index = index - 1;\r\n            }\r\n        }\r\n        while (templetStr.search(specialChar) !== -1) {\r\n            // 数组转成的字符串原本 '特殊字符' 位置都是富文本标签的位置, 替换回标签\r\n            if (matchArr[0]) {\r\n                templetStr = templetStr.replace(specialChar, matchArr[0].toString());\r\n                matchArr.splice(0, 1);\r\n            } else {\r\n                templetStr = templetStr.replace(specialChar, \"\");// 空字符串替换,防止死循环\r\n                console.warn(\"matchArr not enough\");\r\n            }\r\n        }\r\n        const lastStrArr: string[] = []; // 转换后富文本数组\r\n        const arrayParm: string[] = new Array(paraNum).fill(\"\"); // 替换参数数组\r\n        for (let i = 0; i < textArr.length; i++) {\r\n            for (const text of textArr[i]) {\r\n                arrayParm[i] = arrayParm[i] + text;\r\n                let replaceStr1 = templetStr;\r\n                for (let index = 0; index < paraNum; index++) {\r\n                    replaceStr1 = replaceStr1.replace(`$[${index}]`, arrayParm[index]);\r\n                }\r\n                lastStrArr.push(replaceStr1);\r\n            }\r\n        }\r\n        return lastStrArr;\r\n    }\r\n\r\n    /**\r\n     * 格式化时间戳\r\n     * @param date Date\r\n     * @param fmt 格式，默认 yyyy/MM/dd hh:mm:ss\r\n     * \r\n     * 【可用标志：y-年 | M-月 | d-日 | h-小时 | m-分 | s-秒 | q-季度 | S-毫秒】\r\n     * \r\n     * @returns String\r\n     */\r\n    public static dateFormat(date: Date, fmt = 'yyyy/MM/dd hh:mm:ss') {\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1,                 //月份   \r\n            \"d+\": date.getDate(),                    //日   \r\n            \"h+\": date.getHours(),                   //小时   \r\n            \"m+\": date.getMinutes(),                 //分   \r\n            \"s+\": date.getSeconds(),                 //秒   \r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度   \r\n            \"S\": date.getMilliseconds()             //毫秒   \r\n        };\r\n        if (/(y+)/.test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n        for (let k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        }\r\n        return fmt;\r\n    }\r\n\r\n    /**\r\n     * 获取某一位的值\r\n     * @param flag \r\n     * @param position \r\n     * @returns \r\n     */\r\n    public static getBitValue(flag: number, position: number) {\r\n        return ((1 << (position - 1)) & flag) > 0 ? 1 : 0;\r\n    }\r\n\r\n    /**\r\n   * 1为真0为假\r\n   * @param flag\r\n   * @param position\r\n   */\r\n    public static checkBitValue(flag: number, position: number) {\r\n        return this.getBitValue(flag, position) == 1 ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 设置富文本数字字体大小\r\n     * @param richText 原富文本\r\n     * @param num_size 数字字体大小\r\n     * @returns 新文本\r\n     */\r\n    public static setRichTextNumberSize(richText: string, num_size: number) {\r\n        let reg = new RegExp(\"^(<.*?>)[0-9]+\", \"g\");\r\n        let results = richText.match(reg);\r\n        if (!results || results.length <= 0) return richText;\r\n        results.forEach(res => richText.replace(res, `<size=${num_size}>${res}</size>`));\r\n        return richText;\r\n    }\r\n\r\n    /**\r\n    * 格式化时间到分\r\n    * @param time 时间(单位：秒)\r\n    * @returns (分:秒)\r\n    */\r\n    static formatTimeToMin(time: number, withZH = false) {\r\n        let min = Math.floor(time / 60);\r\n        let sec = Math.ceil(time % 60);\r\n        return withZH ? `${this.keepIntUnits(min, 2)}分${this.keepIntUnits(sec, 2)}秒` : `${this.keepIntUnits(min, 2)}:${this.keepIntUnits(sec, 2)}`;\r\n    }\r\n\r\n    /** \r\n     * 格式化时间 \r\n     * @param time 秒 \r\n     * @param fmt 显示格式 \r\n     * @param fix 后缀 \r\n     * @returns  \r\n     */\r\n    static formatTime(time: number, fmt: string = \"dhms\", fix: Object = { d: \"d\", h: \"h\", m: \"m\", s: \"s\" }) {\r\n        let day = this.keepIntUnits(Math.floor(time / (24 * 3600)), 2);\r\n        let hour = this.keepIntUnits(Math.floor(time / 3600) % 24, 2);\r\n        let min = this.keepIntUnits(Math.floor(time / 60) % 60, 2);\r\n        let sec = this.keepIntUnits(Math.floor(time % 60), 2);\r\n        let obj = { d: day, h: hour, m: min, s: sec };\r\n        let str = \"\";\r\n        for (let i = 0; i < fmt.length; i++) {\r\n            let fixs = fix && fix[fmt[i]];\r\n            str += obj[fmt[i]] + fixs;\r\n            if (fixs == \"\" && i < fmt.length - 1) {\r\n                str += \":\";\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n    * 设置整形数字固定位数（不足的部分用0充填，超出设定长度或者不为整形则直接返回字符串形式）\r\n    * @param int 要调整位数的数字\r\n    * @param units 要调整的位数\r\n    * @returns 调整后的字符串\r\n    */\r\n    static keepIntUnits(int: number, units: number) {\r\n        if (!Number.isInteger(int) || int.toString().length >= units) return int.toString();\r\n        let intStr = int.toString();\r\n        let str: string[] = [];\r\n        for (let i = 0; i < units; i++) {\r\n            if (i < intStr.length) {\r\n                str.push(intStr.charAt(i));\r\n            } else {\r\n                str.unshift(\"0\");\r\n            }\r\n        }\r\n        return str.join(\"\");\r\n    }\r\n\r\n    /**获取节点相对自身的矩形范围 */\r\n    static getSelfRect(node: cc.Node) {\r\n        return cc.rect(-node.width * node.anchorX, -node.height * node.anchorY, node.width, node.height);\r\n    }\r\n\r\n    /**\r\n     * 等比分割矩形\r\n     * @param rect 原矩形\r\n     * @param row 行数\r\n     * @param col 列数\r\n     * @returns 切割后的矩形\r\n     */\r\n    static splitRect(rect: cc.Rect, row: number, col: number) {\r\n        let splitRects: cc.Rect[] = [];\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < col; j++) {\r\n                splitRects.push(cc.rect(rect.x + j * rect.width / col, rect.y + i * rect.height / row, rect.width / col, rect.height / row));\r\n            }\r\n        }\r\n        return splitRects;\r\n    }\r\n\r\n    static formatCountPerKilo(count: number, fractionDigits: number = 1, kiloLimit = 10000, milloneLimit = 100000000) {\r\n        fractionDigits = Math.max(fractionDigits, 0);\r\n        if (count >= milloneLimit) {\r\n            return (Math.floor(count /= Math.pow(10, 8 - fractionDigits)) / Math.pow(10, fractionDigits)) + \"亿\";\r\n        } else if (count >= kiloLimit) {\r\n            return (Math.floor(count /= Math.pow(10, 4 - fractionDigits)) / Math.pow(10, fractionDigits)) + \"万\";\r\n        } else {\r\n            return count + \"\";\r\n        }\r\n    }\r\n\r\n    static sum(arr: number[]) {\r\n        let res = 0;\r\n        arr.forEach(num => res += num);\r\n        return res;\r\n    }\r\n\r\n    static isValid(value) {\r\n        return value != null && cc.isValid(value, true);\r\n    }\r\n\r\n    static convertStrToNumber(str: string) {\r\n        let value = 0;\r\n        if (str.includes(\"万\")) {\r\n            str = str.replace(\"万\", \"\");\r\n            value = Number(str) * 10000;\r\n        } else if (str.includes(\"亿\")) {\r\n            str = str.replace(\"亿\", \"\");\r\n            value = Number(str) * 100000000;\r\n        } else {\r\n            value = Number(str);\r\n        }\r\n        return value || 0\r\n    }\r\n\r\n    /**\r\n     * 将一个值随机分成几份\r\n     * @param total 值\r\n     * @param parts 要分的份数\r\n     * @param maxOffsetPer 最大差值百分比\r\n     * @param isInt 是否整型\r\n     * @returns \r\n     */\r\n    static splitIntoRandomShares(total: number, parts: number, maxOffsetPer: number = 0.2, isInt: boolean = true): number[] {\r\n        const shares = [];\r\n        let partNum = total / parts;\r\n        if (isInt) {\r\n            if (!this.isInteger(partNum)) {\r\n                partNum = Math.ceil(partNum);\r\n            }\r\n        }\r\n        let maxOffset = partNum * maxOffsetPer / 2;\r\n        if (isInt) maxOffset = Math.floor(maxOffset);\r\n        let max = partNum + maxOffset;\r\n        let min = partNum - maxOffset;\r\n\r\n        for (let i = 0; i < parts - 1; i++) {\r\n            let randomShare = isInt ? this.getRandomInt(min, max) : this.getRandomFloat(min, max);\r\n            shares.push(randomShare);\r\n            total -= randomShare;\r\n        }\r\n\r\n        shares.push(total);\r\n\r\n        shares.sort(() => Math.random() - 0.5);\r\n\r\n        return shares;\r\n    }\r\n\r\n    /**动态构建枚举 */\r\n    static createEnum(enumObj: { [key: string]: number }): any {\r\n        return Object.keys(enumObj).reduce((prev, key) => {\r\n            prev[key] = enumObj[key];\r\n            return prev;\r\n        }, {});\r\n    }\r\n\r\n    /**\r\n     * 获得贝塞尔曲线的途径点坐标数组\r\n     * @param posArr 三阶贝塞尔的四个点,数组对应为 0起点,1起点控制点,2终点控制点,3终点\r\n     * @param interval 间隔 每次迭代步长,这个值越小越精细,但是效率越低\r\n     * @returns \r\n     */\r\n    static getBezierPointArr(posArr: cc.Vec2[], interval: number = 300): cc.Vec2[] {\r\n        let allBezierPos = []\r\n        let gap = 1 / interval;\r\n        for (let i = 0; i <= 1; i += gap) {\r\n            let pos = this._caculateBezierP(posArr, i)\r\n            allBezierPos.push(pos)\r\n        }\r\n        return allBezierPos;\r\n    }\r\n\r\n    /**\r\n     * 计算三阶贝塞尔在 t时刻 的位置\r\n     * @param p 三阶贝塞尔的四个点,数组对应为 0起点,1起点控制点,2终点控制点,3终点\r\n     * @param t 传入0-1的值,一个时间的迭代过程\r\n     * @returns \r\n     */\r\n    static _caculateBezierP(p: cc.Vec2[], t: number): cc.Vec2 {\r\n        // 三阶贝塞尔运算\r\n        let bezierP: cc.Vec2 = cc.v2()\r\n        bezierP.x = Math.floor(Math.pow(1 - t, 3) * p[0].x + 3 * t * Math.pow(1 - t, 2) * p[1].x + 3 * Math.pow(t, 2) * (1 - t) * p[2].x + Math.pow(t, 3) * p[3].x);\r\n        bezierP.y = Math.floor(Math.pow(1 - t, 3) * p[0].y + 3 * t * Math.pow(1 - t, 2) * p[1].y + 3 * Math.pow(t, 2) * (1 - t) * p[2].y + Math.pow(t, 3) * p[3].y);\r\n        return bezierP;\r\n    }\r\n\r\n    /**\r\n     * 获得以每万为单位的数值字符串\r\n     * @param value 原数值\r\n     * @param decimal 小数位\r\n     * @returns \r\n     */\r\n    static getFormatValueStr(value: number, decimal: number = 1) {\r\n        if (value >= Math.pow(10, 12)) {//京\r\n            return Math.floor(value / Math.pow(10, 12 - decimal)) / Math.pow(10, decimal) + \"t\";\r\n        } else if (value >= Math.pow(10, 9)) {//兆\r\n            return Math.floor(value / Math.pow(10, 9 - decimal)) / Math.pow(10, decimal) + \"g\";\r\n        } else if (value >= Math.pow(10, 6)) {//亿\r\n            return Math.floor(value / Math.pow(10, 6 - decimal)) / Math.pow(10, decimal) + \"m\";\r\n        } else if (value >= Math.pow(10, 3)) {//万\r\n            return Math.floor(value / Math.pow(10, 3 - decimal)) / Math.pow(10, decimal) + \"k\";\r\n        } else {\r\n            return value.toString();\r\n        }\r\n    }\r\n\r\n    /**判断值是否为整型 */\r\n    static isInteger(value: any): value is number {\r\n        return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n    }\r\n}"]}