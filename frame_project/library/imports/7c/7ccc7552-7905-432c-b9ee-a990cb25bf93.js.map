{"version":3,"sources":["assets\\homePage\\script\\common\\LoadingProgressCol.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,WAAW;AACL,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAgD,sCAAY;IAA5D;QAAA,qEAqEC;QAlEW,mBAAa,GAAa,IAAI,CAAC;QAGvC,iBAAW,GAAmB,IAAI,CAAC;QAGnC,YAAM,GAAc,IAAI,CAAC;QAGjB,kBAAY,GAAW,CAAC,CAAC;QAEzB,aAAO,GAAY,KAAK,CAAC;QACzB,cAAQ,GAAY,KAAK,CAAC;QAC1B,aAAO,GAAQ,IAAI,CAAC;QACpB,iBAAW,GAAW,CAAC,CAAC;;IAoDpC,CAAC;IAlDU,8CAAiB,GAAxB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;IAC7C,CAAC;IAEM,2CAAc,GAArB;QAAA,iBAKC;QAJG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAA;IACN,CAAC;IAEM,mCAAM,GAAb,UAAc,EAAU;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC;SAC3B;aAAM;YACH,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;aACtD;SACJ;QACD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACtC,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAEzC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;IACL,CAAC;IAEM,yCAAY,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAhED;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6DACoB;IAGvC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;2DACU;IAGnC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sDACK;IAGzB;QADC,QAAQ;4DACwB;IAZhB,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAqEtC;IAAD,yBAAC;CArED,AAqEC,CArE+C,EAAE,CAAC,SAAS,GAqE3D;kBArEoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["\r\n/**加载进度条 */\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingProgressCol extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    private progressLabel: cc.Label = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    progressBar: cc.ProgressBar = null;\r\n\r\n    @property(cc.Sprite)\r\n    barSpr: cc.Sprite = null;\r\n\r\n    @property\r\n    private initProgress: number = 0;\r\n\r\n    private isStart: boolean = false;\r\n    private isFinish: boolean = false;\r\n    private resolve: any = null;\r\n    private curProgress: number = 0;\r\n\r\n    public startProgressAnim() {\r\n        this.node.active = true;\r\n        this.isStart = true;\r\n        this.curProgress = this.initProgress;\r\n        this.progressBar.progress = this.curProgress;\r\n        this.barSpr.fillRange = this.curProgress;\r\n    }\r\n\r\n    public finishProgress() {\r\n        this.isFinish = true;\r\n        return new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n        })\r\n    }\r\n\r\n    public update(dt: number): void {\r\n        if (!this.isStart) {\r\n            return;\r\n        }\r\n\r\n        if (this.isFinish) {\r\n            this.curProgress += 0.1;\r\n        } else {\r\n            if (this.curProgress <= 0.99) {\r\n                this.curProgress += ((1 - this.curProgress) / 500);\r\n            }\r\n        }\r\n        if (this.curProgress > 1) {\r\n            console.log(\"LoadingCol.ts=>update:进度条已满\");\r\n            this.curProgress = 1;\r\n        }\r\n\r\n        let proLabel = this.curProgress * 100;\r\n        let pre = Number(proLabel.toFixed(0));\r\n        this.progressLabel.string = Math.min(99, pre) + \"%\";\r\n        this.progressBar.progress = this.curProgress;\r\n        this.barSpr.fillRange = this.curProgress;\r\n\r\n        if (this.curProgress >= 1 && this.isStart) {\r\n            console.log(\"进度条结束\")\r\n            this.isStart = false;\r\n            this.isFinish = false;\r\n            this.resolve();\r\n        }\r\n    }\r\n\r\n    public hideLoadNode() {\r\n        this.node.active = false;\r\n    }\r\n\r\n}\r\n"]}