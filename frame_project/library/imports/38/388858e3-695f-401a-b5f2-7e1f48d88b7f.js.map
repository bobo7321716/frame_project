{"version":3,"sources":["assets\\homePage\\script\\common\\MyPool.ts"],"names":[],"mappings":";;;;;;AAAA,kDAAiD;AACjD,iCAA4B;AAE5B;IAAA;IA6CA,CAAC;IAzCiB,aAAM,GAApB,UAAqB,GAAc;QAC/B,IAAI,CAAC,GAAG;YAAE,OAAO,IAAI,CAAC;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,IAAI,EAAE;YACN,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACtB,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aAC9B;SACJ;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/C,OAAO,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SAC9B;IACL,CAAC;IAEa,aAAM,GAApB,UAAqB,IAAa;QAC9B,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YACpC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,IAAI,EAAE;gBACN,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE;oBAClC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;iBAC/B;gBACD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAClB;iBAAM;gBACH,IAAI,CAAC,IAAI,CAAC,UAAC,KAAc;oBACrB,IAAI,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,eAAK,CAAC,CAAC;oBACtC,IAAI,KAAK;wBAAE,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC9B,CAAC,EAAE,IAAI,CAAC,CAAA;gBACR,qBAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;SACJ;aAAM;YACH,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;IACL,CAAC;IA1Cc,cAAO,GAA6B,IAAI,GAAG,EAAE,CAAC;IA2CjE,aAAC;CA7CD,AA6CC,IAAA;kBA7CoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import { AbManager } from \"../manager/AbManager\";\r\nimport AbRef from \"./AbRef\";\r\n\r\nexport default class MyPool {\r\n\r\n    private static poolMap: Map<string, cc.NodePool> = new Map();\r\n\r\n    public static getObj(pre: cc.Prefab): cc.Node {\r\n        if (!pre) return null;\r\n        let pool = this.poolMap.get(pre._uuid);\r\n        if (pool) {\r\n            let node = pool.get();\r\n            if (node && cc.isValid(node)) {\r\n                return node;\r\n            } else {\r\n                return cc.instantiate(pre);\r\n            }\r\n        } else {\r\n            this.poolMap.set(pre._uuid, new cc.NodePool());\r\n            return cc.instantiate(pre);\r\n        }\r\n    }\r\n\r\n    public static putObj(node: cc.Node) {\r\n        if (!node || !cc.isValid(node, true)) return;\r\n        if (node._prefab) {\r\n            let uuid = node._prefab.asset._uuid;\r\n            let pool = this.poolMap.get(uuid);\r\n            if (pool) {\r\n                if (node._prefab.asset.refCount <= 1) {\r\n                    node._prefab.asset.addRef();\r\n                }\r\n                node.removeFromParent(false);\r\n                pool.put(node);\r\n            } else {\r\n                node.walk((cNode: cc.Node) => {\r\n                    let abRef = cNode.getComponent(AbRef);\r\n                    if (abRef) abRef.decRef();\r\n                }, null)\r\n                AbManager.decRef(uuid);\r\n                node.removeFromParent(false);\r\n                node.destroy();\r\n            }\r\n        } else {\r\n            node.removeFromParent(false);\r\n            node.destroy();\r\n        }\r\n    }\r\n}\r\n"]}