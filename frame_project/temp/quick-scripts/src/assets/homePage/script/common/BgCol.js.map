{"version":3,"sources":["assets\\homePage\\script\\common\\BgCol.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Util } from \"./Util\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BgCol extends cc.Component {\r\n\r\n    @property\r\n    initScale: number = 1;\r\n\r\n    @property({ displayName: \"最大缩放倍率\" })\r\n    scale: number = 1.5;\r\n\r\n    private get sceneSize() {\r\n        return cc.winSize;\r\n    };\r\n    private minScale: number = 1;\r\n    private maxScale: number = 1;\r\n    private startDis: number = 0;\r\n    private curScale: number = 1;\r\n    private touchOffset: cc.Vec2 = cc.Vec2.ZERO;\r\n    private touchId: number = null;\r\n    private changeTimes: number = 0;\r\n    private startPos: cc.Vec2 = null;\r\n    public isRegaler: boolean = false;\r\n    public scaleCb: (scale: number) => void = null;\r\n    public moveCb: (pos: cc.Vec2) => void = null;\r\n    public startClickCb: () => void = null;\r\n\r\n    private isBgAutoMoving = false;\r\n\r\n    protected onLoad(): void {\r\n        this.node.setScale(this.initScale);\r\n        this.curScale = this.initScale;\r\n        let wiget = this.node.parent.getComponent(cc.Widget);\r\n        wiget.updateAlignment();\r\n        let imgSize = this.node.getContentSize();\r\n        let widthScale = cc.winSize.width / imgSize.width;\r\n        let heightScale = cc.winSize.height / imgSize.height;\r\n        this.minScale = Math.max(widthScale, heightScale);\r\n        if (this.initScale == 1) {\r\n            this.maxScale = this.minScale * this.scale;\r\n        } else if (this.initScale < 1) {\r\n            this.minScale = this.initScale > this.minScale ? this.initScale : this.minScale;\r\n            this.maxScale = this.scale;\r\n        }\r\n        this.isRegaler = false;\r\n    }\r\n\r\n    protected start(): void {\r\n        this.curScale = this.minScale;\r\n        this.node.setScale(this.curScale);\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.changeTimes = 0;\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n    }\r\n\r\n    init(pos: cc.Vec2, scale: number = this.minScale) {\r\n        this.node.setScale(scale);\r\n        this.node.setPosition(pos);\r\n        this.curScale = scale;\r\n        this.isRegaler = false;\r\n        this.isBgAutoMoving = false;\r\n        this.scaleCb && this.scaleCb(this.curScale);\r\n        this.moveCb && this.moveCb(pos);\r\n    }\r\n\r\n    emitFunc() {\r\n        this.scaleCb && this.scaleCb(this.curScale);\r\n        this.moveCb && this.moveCb(this.node.getPosition());\r\n    }\r\n\r\n    changeScaleClick() {\r\n        this.changeTimes++;\r\n        if (this.changeTimes > 2) {\r\n            this.changeTimes = 0;\r\n        }\r\n        this.curScale = this.changeTimes == 0 ? this.minScale : this.changeTimes == 1 ? (this.maxScale - this.minScale) / 2 + this.minScale : this.maxScale;\r\n        this.node.scale = this.curScale;\r\n        this.scaleCb && this.scaleCb(this.curScale);\r\n    }\r\n\r\n    protected onTouchStart(event: cc.Event.EventTouch) {\r\n        if (this.isRegaler) return;\r\n        if (this.isBgAutoMoving) return;\r\n        let localPos = event.getLocation();\r\n        let touchPos = this.node.parent.convertToNodeSpaceAR(localPos);\r\n        let worldPos = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO);\r\n        let nodePos = this.node.parent.convertToNodeSpaceAR(worldPos);\r\n        this.touchOffset = touchPos.sub(nodePos);\r\n        this.node.setPosition(touchPos.sub(this.touchOffset));\r\n        this.startDis = 0;\r\n        this.curScale = this.node.scale;\r\n        this.startPos = localPos;\r\n        this.touchId = event.getID();\r\n        this.startClickCb && this.startClickCb();\r\n    }\r\n\r\n    protected onTouchMove(event: cc.Event.EventTouch) {\r\n        if (this.isRegaler) return;\r\n        if (this.isBgAutoMoving) return;\r\n        let touchs = event.getTouches();\r\n\r\n        /**缩放 */\r\n        if (touchs.length == 2) {\r\n            //缩放\r\n            let touchPoint1 = touchs[0].getLocation();\r\n            let touchPoint2 = touchs[1].getLocation();\r\n            let curDis = touchPoint1.sub(touchPoint2).mag();\r\n            if (curDis < 0) {\r\n                curDis = 0;\r\n            }\r\n            if (!this.startDis || this.startDis <= 0) {\r\n                this.startDis = curDis;\r\n                this.curScale = this.node.scale;\r\n            } else {\r\n                let scale = curDis / this.startDis * this.curScale;\r\n                if (scale >= this.maxScale) {\r\n                    scale = this.maxScale;\r\n                } else if (scale < this.minScale) {\r\n                    scale = this.minScale;\r\n                }\r\n                this.node.scale = scale;\r\n            }\r\n            this.scaleCb && this.scaleCb(this.node.scale);\r\n        }\r\n        //移动\r\n        let id = event.getID();\r\n        if (id == this.touchId) {\r\n            const nodePos = this.calcEndPoint(event.getDelta());\r\n            this.node.setPosition(nodePos);\r\n            this.moveCb && this.moveCb(nodePos);\r\n        }\r\n    }\r\n\r\n    protected onTouchEnd(event: cc.Event.EventTouch) {\r\n        // let id = event.getID();\r\n        // if (id == this.touchId) {\r\n        //     let pos = event.getLocation();\r\n        //     let moveDis = this.startPos.sub(pos).mag();\r\n        //     if (moveDis < 10) {\r\n        //         console.log(\"点击\");\r\n        //     } else {\r\n        //         console.log(\"拖动\")\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    calcEndPoint(offsetPoint) {\r\n        let nodeWidth = this.node.width;\r\n        let nodeHeight = this.node.height;\r\n        let nodeScale = this.node.scale;\r\n        let clampR = nodeWidth / 2 * nodeScale - this.sceneSize.width / 2;\r\n        clampR = Math.max(0, clampR);\r\n        let clampL = -nodeWidth / 2 * nodeScale + this.sceneSize.width / 2;\r\n        clampL = Math.min(0, clampL);\r\n        let clampT = nodeHeight / 2 * nodeScale - this.sceneSize.height / 2;\r\n        clampT = Math.max(0, clampT);\r\n        let clampB = -nodeHeight / 2 * nodeScale + this.sceneSize.height / 2;\r\n        clampB = Math.min(0, clampB);\r\n\r\n        let nodePos = this.node.getPosition();\r\n        nodePos = nodePos.add(offsetPoint);\r\n        nodePos.x = Util.clampValue(nodePos.x, clampL, clampR);\r\n        nodePos.y = Util.clampValue(nodePos.y, clampB, clampT);\r\n\r\n        return nodePos;\r\n    }\r\n\r\n    /**\r\n     * 自动移动背景\r\n     * @param point 终点，世界坐标\r\n     * @returns \r\n     */\r\n    autoMove(point: cc.Vec2) {\r\n        return new Promise(resolve => {\r\n            this.isBgAutoMoving = true;\r\n\r\n            const winCenter = cc.v2(cc.winSize.width / 2, cc.winSize.height / 2);\r\n            const offsetPoint = winCenter.sub(point);\r\n\r\n            const nodePos = this.calcEndPoint(offsetPoint);\r\n            const time = nodePos.sub(this.node.getPosition()).len() / 1000;\r\n            this.node.stopAllActions();\r\n            cc.tween(this.node)\r\n                .to(time, { x: nodePos.x, y: nodePos.y })\r\n                .call(() => {\r\n                    this.isBgAutoMoving = false;\r\n                    resolve(null);\r\n                })\r\n                .start();\r\n        })\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (!this.isBgAutoMoving) return;\r\n        this.moveCb && this.moveCb(this.node.getPosition());\r\n    }\r\n}\r\n"]}