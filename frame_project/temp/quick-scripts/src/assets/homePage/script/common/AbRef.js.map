{"version":3,"sources":["assets\\homePage\\script\\common\\AbRef.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAiD;AAEjD,WAAW;AACL,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAmC,yBAAY;IAA/C;QAAA,qEA6BC;QA3BG,cAAQ,GAAyC,EAAE,CAAC;QAE5C,kBAAY,GAAmB,IAAI,CAAC;;IAyBhD,CAAC;IAxBG,sBAAW,8BAAW;aAAtB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;aACD,UAAuB,KAAqB;YACxC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,GAAG;gBAAE,OAAO;YACjB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;YACxB,IAAI,KAAK,EAAE;gBACP,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,EAArB,CAAqB,CAAC,CAAC;gBACzD,IAAI,CAAC,GAAG,EAAE;oBACN,GAAG,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;oBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBACD,GAAG,CAAC,QAAQ,EAAE,CAAC;aAClB;QACL,CAAC;;;OAdA;IAgBD,sBAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC;YACnB,qBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IA5BgB,KAAK;QADzB,OAAO;OACa,KAAK,CA6BzB;IAAD,YAAC;CA7BD,AA6BC,CA7BkC,EAAE,CAAC,SAAS,GA6B9C;kBA7BoB,KAAK","file":"","sourceRoot":"/","sourcesContent":["import { AbManager } from \"../manager/AbManager\";\r\n\r\n//记录需要释放的资源\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AbRef extends cc.Component {\r\n\r\n    assetArr: { uuid: string, refCount: number }[] = [];\r\n\r\n    private _spriteFrame: cc.SpriteFrame = null;\r\n    public get spriteFrame(): cc.SpriteFrame {\r\n        return this._spriteFrame;\r\n    }\r\n    public set spriteFrame(value: cc.SpriteFrame) {\r\n        this._spriteFrame = value;\r\n        let spr = this.node.getComponent(cc.Sprite);\r\n        if (!spr) return;\r\n        spr.spriteFrame = value;\r\n        if (value) {\r\n            let obj = this.assetArr.find(v => v.uuid == value._uuid);\r\n            if (!obj) {\r\n                obj = { uuid: value._uuid, refCount: 0 };\r\n                this.assetArr.push(obj);\r\n            }\r\n            obj.refCount++;\r\n        }\r\n    }\r\n\r\n    decRef() {\r\n        this.assetArr.forEach(v => {\r\n            AbManager.decRef(v.uuid, v.refCount);\r\n        })\r\n        this.assetArr = [];\r\n    }\r\n}\r\n"]}