{"version":3,"sources":["assets\\homePage\\script\\common\\SeqFrameCol.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import MyPool from \"./MyPool\";\r\nimport { Util } from \"./Util\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SeqFrameCol extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    spr: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    spfs: cc.SpriteFrame[] = [];\r\n\r\n    @property\r\n    playOnEnable: boolean = false;\r\n\r\n    @property\r\n    replayTimes: number = 1;\r\n\r\n    @property\r\n    interval: number = 0.1;\r\n\r\n    @property\r\n    delayTimeRange: cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    @property\r\n    finishDestroySelf: boolean = false;\r\n\r\n    private spfIndex: number = 0;\r\n    private timer: number = 0;\r\n    private isOnAnim: boolean = false;\r\n    private cb: () => void = null;\r\n    private replayTimer: number = 0;\r\n    private isOnDelay: boolean = false;\r\n    private delayTimer: number = 0;\r\n    private delayLength: number = 0;\r\n\r\n    protected onEnable(): void {\r\n        if (this.playOnEnable) {\r\n            this.playAnim();\r\n        }\r\n    }\r\n\r\n    playAnim() {\r\n        this.spfIndex = 0;\r\n        this.replayTimer = 0;\r\n        this.isOnAnim = false;\r\n        this.timer = 0;\r\n        if (!this.spr) {\r\n            this.spr = this.node.getComponent(cc.Sprite);\r\n        }\r\n        this.spr.spriteFrame = this.spfs[0];\r\n        this.play();\r\n    }\r\n\r\n    play(replayTimes: number = null, cb: () => void = null) {\r\n        if (replayTimes != null) {\r\n            this.replayTimes = replayTimes;\r\n        }\r\n        this.isOnAnim = true;\r\n        this.isOnDelay = false;\r\n        this.spfIndex = 0;\r\n        this.replayTimer = 0;\r\n        this.delayTimer = 0;\r\n        this.timer = 0;\r\n        this.delayLength = Util.getRandomFloat(this.delayTimeRange.x, this.delayTimeRange.y);\r\n        this.cb = cb;\r\n        this.refreshSpr();\r\n    }\r\n\r\n    private refreshSpr() {\r\n        this.spr.spriteFrame = this.spfs[this.spfIndex];\r\n        this.spfIndex++;\r\n        if (this.spfIndex > this.spfs.length - 1) {\r\n            this.spfIndex = 0;\r\n            this.replayTimer++;\r\n            if (this.replayTimes > 0 && this.replayTimer >= this.replayTimes) {\r\n                this.isOnAnim = false;\r\n                this.cb && this.cb();\r\n                if (this.finishDestroySelf) {\r\n                    MyPool.putObj(this.node);\r\n                }\r\n            } else {\r\n                this.isOnDelay = this.delayLength > 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (!this.isOnAnim) {\r\n            return;\r\n        }\r\n        if (this.isOnDelay) {\r\n            this.delayTimer += dt;\r\n            if (this.delayTimer >= this.delayLength) {\r\n                this.isOnDelay = false;\r\n                this.delayTimer = 0;\r\n            }\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n        if (this.timer >= this.interval) {\r\n            this.timer = 0;\r\n            this.refreshSpr();\r\n        }\r\n    }\r\n\r\n    reset(): void {\r\n        this.isOnAnim = false;\r\n        this.isOnDelay = false;\r\n        this.spfIndex = 0;\r\n        this.replayTimer = 0;\r\n        this.delayTimer = 0;\r\n        this.timer = 0;\r\n        this.spr.spriteFrame = this.spfs[0];\r\n    }\r\n}\r\n"]}