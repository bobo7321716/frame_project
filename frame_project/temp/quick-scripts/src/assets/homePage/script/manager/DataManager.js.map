{"version":3,"sources":["assets\\homePage\\script\\manager\\DataManager.ts"],"names":[],"mappings":";;;;;;AAAA,mDAAkD;AAClD,2CAA0C;AAC1C,yCAAwC;AAIxC;IACI;QASQ,cAAS,GAAyF,IAAI,GAAG,EAAE,CAAC;QAEpH,YAAY;QACK,eAAU,GAAG,yDAAuD,UAAU,CAAC,OAAO,aAAU,CAAC;QAElH,cAAc;QACN,aAAQ,GAAY,KAAK,CAAC;IAfV,CAAC;IAAA,CAAC;IAE1B,sBAAW,kBAAG;aAAd;YACI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,EAAE,CAAC;aACjC;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAUD,aAAa;IACb,0BAAI,GAAJ;QAAA,iBAYC;QAXG,4BAA4B;QAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC7C,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,KAAK,IAAM,CAAC,IAAI,eAAM,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;YACpB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAI,CAAC,SAAS,CAAC,CAAA;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,yBAAG,GAAH,UAAyC,IAAkC;QACvE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAM,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACK,kCAAY,GAApB,UAA0D,GAAW,EAAE,IAAkC;QAAzG,iBAcC;QAbG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,KAAI,CAAC,QAAQ,EAAE;gBACf,qBAAS,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,GAAG,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,GAAiB;oBACzF,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAA;aACL;iBAAM;gBACH,qBAAS,CAAC,aAAa,CAAC,uBAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,GAAiB;oBACjF,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAA;aACL;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IA3Dc,gBAAI,GAAgB,IAAI,CAAC;IA4D5C,kBAAC;CA9DD,AA8DC,IAAA;kBA9DoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import { BundleName } from \"../common/BundleName\";\r\nimport { Config } from \"../config/Config\";\r\nimport { AbManager } from \"./AbManager\";\r\nimport BaseDataManager, { BaseData } from \"./BaseData\";\r\n\r\n\r\nexport default class DataManager {\r\n    private constructor() { };\r\n    private static _ins: DataManager = null;\r\n    static get ins() {\r\n        if (this._ins == null) {\r\n            this._ins = new DataManager();\r\n        }\r\n        return this._ins;\r\n    }\r\n\r\n    private _dataMaps: Map<new (datas: BaseData[]) => BaseDataManager<BaseData>, BaseDataManager<BaseData>> = new Map();\r\n\r\n    /**当前版本后缀 */\r\n    private readonly remotePath = `https://cdn.hongshunet.com/zyh/JingShenBingYuan/web/${appContext.version}/config/`;\r\n\r\n    /**是否使用远程配置 */\r\n    private isRemote: boolean = false;\r\n\r\n    /**初始化数据管理类*/\r\n    init() {\r\n        // return Promise.resolve();\r\n        this.isRemote = !CC_DEV;\r\n        console.warn(\"this.isRemote \", this.isRemote)\r\n        let promiseArr = [];\r\n        for (const k in Config) {\r\n            console.log(\"k \", k)\r\n            promiseArr.push(this.registerData(k, Config[k]));\r\n        }\r\n        return Promise.all(promiseArr).then(() => {\r\n            console.log(\"this._dataMaps \", this._dataMaps)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取数据管理类\r\n     * @param type 类型\r\n     * @returns 数据管理类实例\r\n     */\r\n    get<T extends BaseDataManager<BaseData>>(type: new (datas: BaseData[]) => T) {\r\n        return this._dataMaps.get(type) as T;\r\n    }\r\n\r\n    /**\r\n     * 注册数据类\r\n     * @param url 数据资源地址（json格式）\r\n     * @param type 数据资源管理类\r\n     */\r\n    private registerData<T extends BaseDataManager<BaseData>>(url: string, type: new (datas: BaseData[]) => T) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isRemote) {\r\n                AbManager.loadRemote(this.remotePath + url + \".json?t=\" + Date.now()).then((res: cc.JsonAsset) => {\r\n                    this._dataMaps.set(type, new type(res.json));\r\n                    resolve(null);\r\n                })\r\n            } else {\r\n                AbManager.loadBundleRes(BundleName.Config, url, cc.JsonAsset).then((res: cc.JsonAsset) => {\r\n                    this._dataMaps.set(type, new type(res.json));\r\n                    resolve(null);\r\n                })\r\n            }\r\n        })\r\n    }\r\n}"]}