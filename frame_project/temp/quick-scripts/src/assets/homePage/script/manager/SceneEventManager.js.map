{"version":3,"sources":["assets\\homePage\\script\\manager\\SceneEventManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BundleData } from \"../common/BundleData\";\r\nimport { UiBase } from \"../common/UiBase\";\r\nimport { UIManager } from \"./UIManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//界面事件管理\r\n@ccclass\r\nexport default class SceneEventManager extends cc.Component {\r\n\r\n    public static ins: SceneEventManager = null;\r\n    private arg: { data: BundleData, uiBase: UiBase } = null;\r\n    public sceneEvent: { url: string, events: string[], args: any[] }[] = [];\r\n\r\n    protected onLoad(): void {\r\n        SceneEventManager.ins = this;\r\n    }\r\n\r\n    /**检查是否触发界面事件 按照加入顺序依次触发，通过checkNextEvent触发后续事件 */\r\n    public checkSceneEvent(arg: { data: BundleData, uiBase: UiBase }) {\r\n        if (!arg || !arg.data) return;\r\n        this.arg = arg;\r\n        this.checkNextEvent();\r\n    }\r\n\r\n    public checkNextEvent() {\r\n        if (!this.arg) return;\r\n        if (!this.sceneEvent) return;\r\n        if (this.sceneEvent.length <= 0) return;\r\n        // console.warn(\"checkNextEvent = \", this.sceneEvent)\r\n        let info = this.sceneEvent.find(info => info.url == this.arg.data.url);\r\n        if (!info || info.events.length <= 0) return;\r\n        let event = info.events.shift();\r\n        let arg = info.args.shift();\r\n        this.arg.uiBase[event] && this.arg.uiBase[event](arg);\r\n        console.log(\"sceneEvent \", event);\r\n        if (info.events.length <= 0) {\r\n            let index = this.sceneEvent.findIndex(info => info.url == this.arg.data.url);\r\n            if (index != undefined) {\r\n                this.sceneEvent.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public finishCurEvent() {\r\n        UIManager.ins.refreshCurTopBundleData();\r\n    }\r\n\r\n    /**\r\n     * 添加界面事件(在对应界面下次打开或者不被遮挡时检测，成功触发后移除)\r\n     * @param uiBundle 界面的bundleData\r\n     * @param funcName 界面脚本中的方法名\r\n     * @param immediatelyCheck 是否立即检测\r\n     */\r\n    public addSceneEvent(uiBundle: BundleData, funcName: string, arg: any = null, immediatelyCheck: boolean = true, mergeSameFunc: boolean = true) {\r\n        let info = this.sceneEvent.find(info => info.url == uiBundle.url);\r\n        if (info) {\r\n            if (mergeSameFunc) {\r\n                let index = info.events.findIndex(v => v == funcName);\r\n                if (index < 0) {\r\n                    info.events.push(funcName);\r\n                    info.args.push([arg]);\r\n                } else {\r\n                    info.args[index].push(arg);\r\n                }\r\n            } else {\r\n                info.events.push(funcName);\r\n                info.args.push([arg]);\r\n            }\r\n        } else {\r\n            this.sceneEvent.push({ url: uiBundle.url, events: [funcName], args: [[arg]] });\r\n        }\r\n        if (immediatelyCheck) {\r\n            UIManager.ins.refreshCurTopBundleData();\r\n        }\r\n    }\r\n}\r\n"]}