{"version":3,"sources":["assets\\homePage\\script\\manager\\EventManager.ts"],"names":[],"mappings":";;;;;;;AACA;IAAA;IA+BA,CAAC;IA7BG;;;;;OAKG;IACW,wBAAW,GAAzB,UAA0B,IAAY,EAAE,QAAa,EAAE,MAAW;QAC9D,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED;;;;;OAKG;IACW,2BAAc,GAA5B,UAA6B,IAAY,EAAE,QAAc,EAAE,MAAY;QACnE,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED;;;;OAIG;IACW,yBAAY,GAA1B,UAA2B,IAAY,EAAE,GAAe;QAAf,oBAAA,EAAA,UAAe;QACpD,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAEL,mBAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["\r\nexport class EventManager {\r\n\r\n    /**\r\n     * 添加全局事件监听\r\n     * @param type 事件类型，string\r\n     * @param listener 事件触发后的回调方法\r\n     * @param target 指定回调方法中的this\r\n     */\r\n    public static addListener(type: string, listener: any, target: any): void {\r\n        cc.systemEvent.on(type, listener, target, false);\r\n    }\r\n\r\n    /**\r\n     * 移除全局事件监听\r\n     * @param type 事件类型，string\r\n     * @param listener 事件触发后的回调方法\r\n     * @param target 指定回调方法中的this\r\n     */\r\n    public static removeListener(type: string, listener?: any, target?: any): void {\r\n        cc.systemEvent.off(type, listener, target);\r\n    }\r\n\r\n    /**\r\n     * 触发事件\r\n     * @param type 事件类型，string\r\n     * @param msg 需要传入的参数，传入后在回调listener中可以获取到参数\r\n     */\r\n    public static triggerEvent(type: string, msg: any = null): void {\r\n        cc.systemEvent.emit(type, msg);\r\n    }\r\n\r\n}"]}