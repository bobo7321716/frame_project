{"version":3,"sources":["assets\\homePage\\script\\tool\\Bezier.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GamingData from \"../common/GamingData\";\r\nimport { Util } from \"../common/Util\";\r\n\r\nexport class BezierData {\r\n    startPos: cc.Vec2;\r\n    c1: cc.Vec2;  // 起点的控制点\r\n    c2: cc.Vec2;  //终点的控制点\r\n    endPos: cc.Vec2;\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bezier extends cc.Component {\r\n\r\n    private index: number = 0;\r\n    private costTime: number = 0;\r\n    private allBezierPos: cc.Vec2[] = [];\r\n    private endCb: () => void = null;\r\n    private speed: number = 0;\r\n    private sPos: cc.Vec2 = null;\r\n    private ePos: cc.Vec2 = null;\r\n    private sAngle: number = 0;\r\n    private eAngle: number = 0;\r\n    private totalLineLen: number = 0;\r\n    private duration: number = 0;\r\n    private endScale: number = 0;\r\n\r\n    // 匀速贝塞尔曲线运动\r\n    runUniformBezierAct(duration: number, bezierDatas: BezierData[], cb: () => void, endScale: number) {\r\n        if (bezierDatas.length <= 0) return\r\n        this.duration = duration;\r\n        this.index = 0;\r\n        this.endCb = cb;\r\n        this.endScale = endScale;\r\n        this.node.stopAllActions();\r\n        this.allBezierPos = [];\r\n        for (let i = 0; i < bezierDatas.length; ++i) {\r\n            let posArr = [bezierDatas[i].startPos, bezierDatas[i].c1, bezierDatas[i].c2, bezierDatas[i].endPos]\r\n            this.allBezierPos = this.allBezierPos.concat(this._caculateBezierPoint(posArr))\r\n        }\r\n        this.totalLineLen = this._caculateBezierLength(this.allBezierPos);\r\n        this.speed = this.totalLineLen / this.duration;\r\n        this.node.setPosition(this.allBezierPos[0]);\r\n        this.refreshTarget();\r\n    }\r\n\r\n    private refreshTarget() {\r\n        if (this.index >= this.allBezierPos.length) {\r\n            this.node.stopAllActions();\r\n            this.endCb && this.endCb();\r\n        } else {\r\n            if (GamingData.fightSpeedMul > 0) {\r\n                this.sPos = this.node.getPosition();\r\n                this.ePos = this.allBezierPos[this.index];\r\n                let dis = this.ePos.sub(this.sPos).mag();\r\n                if (dis > 0) {\r\n                    let dir = this.ePos.sub(this.sPos).normalize();\r\n                    this.eAngle = -Util.vectorsToDegress(dir);\r\n                    this.costTime = dis / (this.speed * GamingData.fightSpeedMul);\r\n                    cc.tween(this.node)\r\n                        .to(this.costTime, { x: this.ePos.x, y: this.ePos.y, angle: this.eAngle })\r\n                        .call(() => {\r\n                            this.node.setPosition(this.ePos);\r\n                            this.node.angle = this.eAngle;\r\n                            this.node.scale = 1 - this.index / this.allBezierPos.length * (1 - this.endScale);\r\n                            this.index++;\r\n                            this.refreshTarget();\r\n                        })\r\n                        .start()\r\n                } else {\r\n                    this.index++;\r\n                    this.refreshTarget();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 计算所有贝塞尔曲线的点\r\n    private _caculateBezierPoint(posArr: cc.Vec2[]) {\r\n        let allBezierPos = []\r\n        let gap = 1 / 30 // 每次迭代步长,这个值越小越精细,但是效率越低,这里迭代300次已经够了\r\n        for (let i = 0; i <= 1; i += gap) {\r\n            let pos = this._caculateBezierP(posArr, i)\r\n            allBezierPos.push(pos)\r\n        }\r\n\r\n        return allBezierPos\r\n    }\r\n\r\n    // 计算贝塞尔曲线的长度\r\n    private _caculateBezierLength(allBezierPos: cc.Vec2[]) {\r\n        let totalLineLen = 0\r\n        for (let i = 1; i < allBezierPos.length; ++i) {\r\n            let dis = cc.v2(allBezierPos[i].x - allBezierPos[i - 1].x, allBezierPos[i].y - allBezierPos[i - 1].y).len()\r\n            totalLineLen += dis\r\n        }\r\n\r\n        return totalLineLen\r\n    }\r\n\r\n    /**\r\n     * 计算三阶贝塞尔在 t时刻 的位置\r\n     * @param p 三阶贝塞尔的四个点,数组对应为 0起点,1起点控制点,2终点控制点,3终点\r\n     * @param t 传入0-1的值,一个时间的迭代过程\r\n     * @returns \r\n     */\r\n    private _caculateBezierP(p: cc.Vec2[], t: number): cc.Vec2 {\r\n        // 三阶贝塞尔运算\r\n        let bezierP: cc.Vec2 = cc.v2()\r\n        bezierP.x = Math.floor(Math.pow(1 - t, 3) * p[0].x + 3 * t * Math.pow(1 - t, 2) * p[1].x + 3 * Math.pow(t, 2) * (1 - t) * p[2].x + Math.pow(t, 3) * p[3].x);\r\n        bezierP.y = Math.floor(Math.pow(1 - t, 3) * p[0].y + 3 * t * Math.pow(1 - t, 2) * p[1].y + 3 * Math.pow(t, 2) * (1 - t) * p[2].y + Math.pow(t, 3) * p[3].y);\r\n        return bezierP;\r\n    }\r\n}\r\n"]}