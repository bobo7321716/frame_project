{"version":3,"sources":["assets\\homePage\\script\\tool\\CheckTouchMoveDir.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\nexport enum MoveType {\r\n    ONLY_X = 0,\r\n    ONLY_Y = 1,\r\n    X_AND_Y = 2,\r\n}\r\n\r\nexport enum CheckDir {\r\n    LEFT_DOWN = 0,\r\n    RIGHT_UP = 1,\r\n    NONE\r\n}\r\n\r\n@ccclass\r\nexport class CheckTouchMoveDir extends cc.Component {\r\n\r\n    @property({\r\n        tooltip: '触摸板节点',\r\n        type: cc.Node\r\n    })\r\n    private touchNode: cc.Node = null;\r\n\r\n    @property({\r\n        displayName: '移动方式',\r\n        type: cc.Enum(MoveType)\r\n    })\r\n    private moveType: MoveType = MoveType.ONLY_X;\r\n\r\n    @property({ displayName: \"监测方向\", type: cc.Enum(CheckDir) })\r\n    private checkDir: CheckDir = CheckDir.NONE;\r\n\r\n    @property({ displayName: \"监测滑动距离\" })\r\n    private isMonitorDis: boolean = true;\r\n\r\n    @property({ visible() { return this.isMonitorDis } })\r\n    private triggerDis: number = 5;\r\n\r\n    @property({ displayName: \"监测点击\" })\r\n    private isCheckClick: boolean = false;\r\n\r\n    @property\r\n    useCapture: boolean = true;\r\n\r\n    @property\r\n    id: number = 0;\r\n\r\n    @property({ displayName: \"触发事件\", type: cc.Component.EventHandler })\r\n    touchEvents: cc.Component.EventHandler[] = [];\r\n\r\n    public onEnable(): void {\r\n        if (!this.touchNode) {\r\n            this.touchNode = this.node;\r\n        }\r\n        this.touchNode.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, this.useCapture);\r\n        this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this, this.useCapture);\r\n        this.touchNode.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this, this.useCapture);\r\n        this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this, this.useCapture);\r\n        this.currentTouchId = -1;\r\n        this.startTouch = false;\r\n    }\r\n\r\n    public onDisable(): void {\r\n        this.touchNode.off(cc.Node.EventType.TOUCH_START, this.touchStart, this, this.useCapture);\r\n        this.touchNode.off(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this, this.useCapture);\r\n        this.touchNode.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this, this.useCapture);\r\n        this.touchNode.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this, this.useCapture);\r\n    }\r\n\r\n    private _startTouch: boolean = false;\r\n    public get startTouch(): boolean {\r\n        return this._startTouch;\r\n    }\r\n    public set startTouch(value: boolean) {\r\n        this._startTouch = value;\r\n    }\r\n    private currentTouchId: number = -1;\r\n    private startPos: cc.Vec2 = cc.Vec2.ZERO;\r\n    private endPos: cc.Vec2 = cc.Vec2.ZERO;\r\n    private lastPos: cc.Vec2 = cc.Vec2.ZERO;\r\n    private isCanCheck: boolean = true;\r\n    private isMove: boolean = false;\r\n    private totalMoveDis: number = 0;\r\n\r\n    private touchStart(event): void {\r\n        if (this.startTouch) {\r\n            return;\r\n        }\r\n        this.startTouch = true;\r\n        this.currentTouchId = event.getID();\r\n\r\n        let worldPos = event.getLocation();\r\n        worldPos.x = Math.floor(worldPos.x);\r\n        worldPos.y = Math.floor(worldPos.y);\r\n\r\n        this.lastPos = worldPos;\r\n        this.startPos = worldPos;\r\n        this.endPos = worldPos;\r\n        this.isMove = !this.isMonitorDis;\r\n        this.totalMoveDis = 0;\r\n    }\r\n\r\n    private touchMove(event): void {\r\n        if (event.getID() !== this.currentTouchId) {\r\n            return;\r\n        }\r\n        let worldPos = event.getLocation();\r\n        worldPos.x = Math.floor(worldPos.x);\r\n        worldPos.y = Math.floor(worldPos.y);\r\n        if (worldPos.x == this.lastPos.x && worldPos.y == this.lastPos.y) {\r\n            return;\r\n        }\r\n        let moveDis = this.endPos.sub(worldPos).mag();\r\n        this.totalMoveDis += moveDis;\r\n        if (this.isMonitorDis && this.totalMoveDis >= this.triggerDis && !this.isMove) {\r\n            this.isMove = true;\r\n        }\r\n        this.endPos = worldPos;\r\n    }\r\n\r\n    private touchEnd(event): void {\r\n        if (event.getID() !== this.currentTouchId) {\r\n            return;\r\n        }\r\n        this.startTouch = false;\r\n        this.currentTouchId = -1;\r\n\r\n        if (!this.isMove) {\r\n            this.isCheckClick && this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                value.emit([this.id]);\r\n            });\r\n        } else {\r\n            if (this.moveType == MoveType.X_AND_Y) {\r\n                // let moveDis = this.startPos.sub(this.endPos).mag();\r\n                // console.log(\"touchEnd _moveDis = \",moveDis);\r\n                // if(moveDis >= this.triggerDis){\r\n                //     WorldEventManager.triggerEvent(EventEnum.TouchMove,moveDis);\r\n                // }\r\n                let xMoveDis = this.endPos.x - this.startPos.x;\r\n                let yMoveDis = this.endPos.y - this.startPos.y;\r\n                this.isCanCheck && this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                    value.emit([this.id, xMoveDis, yMoveDis]);\r\n                });\r\n            } else {\r\n                if (this.moveType == MoveType.ONLY_X) {\r\n                    let call = () => {\r\n                        if (!this.isCanCheck) {\r\n                            return;\r\n                        }\r\n                        if (this.checkDir == CheckDir.NONE) {\r\n                            this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                value.emit([this.id, moveDis, dir]);\r\n                            });\r\n                        } else if (this.checkDir == CheckDir.LEFT_DOWN) {\r\n                            if (this.endPos.x < this.startPos.x) {\r\n                                this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                    value.emit([this.id, moveDis]);\r\n                                });\r\n                            }\r\n                        } else if (this.checkDir == CheckDir.RIGHT_UP) {\r\n                            if (this.endPos.x > this.startPos.x) {\r\n                                this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                    value.emit([this.id, moveDis]);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    let dir = this.endPos.x - this.startPos.x > 0 ? 1 : -1;\r\n                    let moveDis = Math.abs(this.endPos.x - this.startPos.x);\r\n                    if (this.isMonitorDis) {\r\n                        // console.log(\"this._moveDis = \", moveDis)\r\n                        if (moveDis >= this.triggerDis) {\r\n                            call();\r\n                        }\r\n                    } else {\r\n                        call();\r\n                    }\r\n                } else if (this.moveType == MoveType.ONLY_Y) {\r\n                    let call = () => {\r\n                        if (!this.isCanCheck) {\r\n                            return;\r\n                        }\r\n                        if (this.checkDir == CheckDir.NONE) {\r\n                            this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                value.emit([this.id, moveDis]);\r\n                            });\r\n                        } else if (this.checkDir == CheckDir.LEFT_DOWN) {\r\n                            if (this.endPos.y < this.startPos.y) {\r\n                                this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                    value.emit([this.id, moveDis]);\r\n                                });\r\n                            }\r\n                        } else if (this.checkDir == CheckDir.RIGHT_UP) {\r\n                            if (this.endPos.y > this.startPos.y) {\r\n                                this.touchEvents.forEach((value: cc.Component.EventHandler, index: number, array: cc.Component.EventHandler[]) => {\r\n                                    value.emit([this.id, moveDis]);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    let moveDis = Math.abs(this.endPos.y - this.startPos.y);\r\n                    if (this.isMonitorDis) {\r\n                        // console.log(\"moveDis = \", moveDis)\r\n                        if (moveDis >= this.triggerDis) {\r\n                            call();\r\n                        }\r\n                    } else {\r\n                        call();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.isMove = false;\r\n        this.startPos = cc.Vec2.ZERO;\r\n        this.endPos = cc.Vec2.ZERO;\r\n        this.lastPos = cc.Vec2.ZERO;\r\n    }\r\n\r\n    public setCheckDir(dir: CheckDir) {\r\n        this.checkDir = dir;\r\n    }\r\n\r\n    public setIsCanCheck(isCheck: boolean) {\r\n        this.isCanCheck = isCheck;\r\n    }\r\n}"]}